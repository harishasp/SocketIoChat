{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat-service.service.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container{max-width:1170px; margin:auto;}\\r\\nimg{ max-width:100%;}\\r\\n.inbox_people {\\r\\n  background: #f8f8f8 none repeat scroll 0 0;\\r\\n  float: left;\\r\\n  overflow: hidden;\\r\\n  width: 40%; border-right:1px solid #c4c4c4;\\r\\n}\\r\\n.inbox_msg {\\r\\n  border: 1px solid #c4c4c4;\\r\\n  clear: both;\\r\\n  overflow: hidden;\\r\\n}\\r\\n.top_spac{ margin: 20px 0 0;}\\r\\nheadind_srch{ padding:10px 29px 10px 20px; overflow:hidden; border-bottom:1px solid #c4c4c4;}\\r\\n.recent_heading h4 {\\r\\n  color: #05728f;\\r\\n  font-size: 21px;\\r\\n  margin: auto;\\r\\n}\\r\\n.srch_bar input{ border:1px solid #cdcdcd; border-width:0 0 1px 0; width:80%; padding:2px 0 4px 6px; background:none;}\\r\\n.srch_bar .input-group-addon button {\\r\\n  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\\r\\n  border: medium none;\\r\\n  padding: 0;\\r\\n  color: #707070;\\r\\n  font-size: 18px;\\r\\n}\\r\\n.srch_bar .input-group-addon { margin: 0 0 0 -27px;}\\r\\n.chat_ib h5{ font-size:15px; color:#464646; margin:0 0 8px 0;}\\r\\n.chat_ib h5 span{ font-size:13px; float:right;}\\r\\n.chat_ib p{ font-size:14px; color:#989898; margin:auto}\\r\\n.chat_img {\\r\\n  float: left;\\r\\n  width: 11%;\\r\\n}\\r\\n.chat_ib {\\r\\n  float: left;\\r\\n  padding: 0 0 0 15px;\\r\\n  width: 88%;\\r\\n}\\r\\n.chat_people{ overflow:hidden; clear:both;}\\r\\n.chat_list {\\r\\n  border-bottom: 1px solid #c4c4c4;\\r\\n  margin: 0;\\r\\n  padding: 18px 16px 10px;\\r\\n}\\r\\n.inbox_chat { height: 550px; overflow-y: scroll;}\\r\\n.active_chat{ background:#ebebeb;}\\r\\n.incoming_msg_img {\\r\\n  display: inline-block;\\r\\n  width: 6%;\\r\\n}\\r\\n.received_msg {\\r\\n  display: inline-block;\\r\\n  padding: 0 0 0 10px;\\r\\n  vertical-align: top;\\r\\n  width: 92%;\\r\\n }\\r\\n.received_withd_msg p {\\r\\n  background: #ebebeb none repeat scroll 0 0;\\r\\n  border-radius: 3px;\\r\\n  color: #646464;\\r\\n  font-size: 14px;\\r\\n  margin: 0;\\r\\n  padding: 5px 10px 5px 12px;\\r\\n  width: 100%;\\r\\n}\\r\\n.time_date {\\r\\n  color: #747474;\\r\\n  display: block;\\r\\n  font-size: 12px;\\r\\n  margin: 8px 0 0;\\r\\n}\\r\\n.received_withd_msg { width: 57%;}\\r\\n.mesgs {\\r\\n  float: left;\\r\\n  padding: 30px 15px 0 25px;\\r\\n  width: 60%;\\r\\n}\\r\\n.sent_msg p {\\r\\n  background: #05728f none repeat scroll 0 0;\\r\\n  border-radius: 3px;\\r\\n  font-size: 14px;\\r\\n  margin: 0; color:#fff;\\r\\n  padding: 5px 10px 5px 12px;\\r\\n  width:100%;\\r\\n}\\r\\n.outgoing_msg{ overflow:hidden; margin:26px 0 26px;}\\r\\n.sent_msg {\\r\\n  float: right;\\r\\n  width: 46%;\\r\\n}\\r\\n.input_msg_write input {\\r\\n  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\\r\\n  border: medium none;\\r\\n  color: #4c4c4c;\\r\\n  font-size: 15px;\\r\\n  min-height: 48px;\\r\\n  width: 100%;\\r\\n}\\r\\n.type_msg {border-top: 1px solid #c4c4c4;position: relative;}\\r\\n.msg_send_btn {\\r\\n  background: #05728f none repeat scroll 0 0;\\r\\n  border: medium none;\\r\\n  border-radius: 50%;\\r\\n  color: #fff;\\r\\n  cursor: pointer;\\r\\n  font-size: 17px;\\r\\n  height: 33px;\\r\\n  position: absolute;\\r\\n  right: 0;\\r\\n  top: 11px;\\r\\n  width: 33px;\\r\\n}\\r\\n.messaging { padding: 0 0 50px 0;}\\r\\n.msg_history {\\r\\n  height: 516px;\\r\\n  overflow-y: auto;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <h2>Realtime Chat Application</h2>\\n        <hr>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-5\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"user\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Enter username\\\">\\n                <!-- <small id=\\\"userHelp\\\" class=\\\"form-text text-muted\\\">Type your username.</small> -->\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-5\\\">\\n            <label for=\\\"roomInput\\\">Choose room</label>\\n            <select name=\\\"roomInput\\\" id=\\\"roomInput\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"room\\\">\\n                <option value=\\\"Lobby\\\">Lobby</option>\\n                <option value=\\\"Hall\\\">Hall</option>\\n                <option value=\\\"Deluxe\\\">Deluxe</option>\\n            </select>\\n        </div>\\n        <div class=\\\"col sm-2\\\">\\n            <div style=\\\"margin-top:19px;\\\" class=\\\"pull-right\\\"> \\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"join()\\\">Join</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"leave()\\\">Leave</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"well\\\" style=\\\"height:200px; padding:15px;\\\">\\n            <div *ngFor=\\\"let item of messageArray\\\">\\n            <span><strong>{{item.user}} : </strong> {{item.message}}</span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"messageText\\\">            \\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"sendMessage()\\\">Send</button>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport {ChatServiceService} from './chat-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  user:String;\n    room:String;\n    messageText:String;\n    messageArray:Array<{user:String,message:String}> = [];\n    constructor(private _chatService:ChatServiceService){\n        this._chatService.newUserJoined()\n        .subscribe(data=> this.messageArray.push(data));\n\n\n        this._chatService.userLeftRoom()\n        .subscribe(data=>this.messageArray.push(data));\n\n        this._chatService.newMessageReceived()\n        .subscribe(data=>this.messageArray.push(data));\n    }\n\n    join(){\n        this._chatService.joinRoom({user:this.user, room:this.room});\n    }\n\n    leave(){\n        this._chatService.leaveRoom({user:this.user, room:this.room});\n    }\n\n    sendMessage()\n    {\n        this._chatService.sendMessage({user:this.user, room:this.room, message:this.messageText});\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ChatServiceService } from '../app/chat-service.service';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ChatComponent } from './chat/chat.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [ChatServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, OnInit } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatServiceService implements OnInit {\n  ngOnInit() {\n  \n  }\n  private socket = io('https://harishasp.github.io/SocketIoChat/');\n\n  joinRoom(data)\n  {\n      this.socket.emit('join',data);\n  }\n\n  newUserJoined()\n  {\n      let observable = new Observable<{user:String, message:String}>(observer=>{\n          this.socket.on('new user joined', (data)=>{\n              observer.next(data);\n          });\n          return () => {this.socket.disconnect();}\n      });\n\n      return observable;\n  }\n\n  leaveRoom(data){\n      this.socket.emit('leave',data);\n  }\n\n  userLeftRoom(){\n      let observable = new Observable<{user:String, message:String}>(observer=>{\n          this.socket.on('left room', (data)=>{\n              observer.next(data);\n          });\n          return () => {this.socket.disconnect();}\n      });\n\n      return observable;\n  }\n\n  sendMessage(data)\n  {\n      this.socket.emit('message',data);\n  }\n\n  newMessageReceived(){\n      let observable = new Observable<{user:String, message:String}>(observer=>{\n          this.socket.on('new message', (data)=>{\n              observer.next(data);\n          });\n          return () => {this.socket.disconnect();}\n      });\n\n      return observable;\n  }\n}\n\n\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let message of messages\\\">\\n  {{message}}\\n</div>\\n<input [(ngModel)]=\\\"message\\\" (keyup)=\\\"$event.keyCode == 13 && sendMessage()\\\" />\\n<button (click)=\\\"sendMessage()\\\">Send</button>\\n<!-- <div class=\\\"container\\\">\\n  <h3 class=\\\" text-center\\\">Messaging</h3>\\n  <div class=\\\"messaging\\\">\\n        <div class=\\\"inbox_msg\\\">\\n         \\n          <div class=\\\"mesgs\\\">\\n            <div class=\\\"msg_history\\\">\\n              <div class=\\\"incoming_msg\\\">\\n                <div class=\\\"incoming_msg_img\\\"> <img src=\\\"https://ptetutorials.com/images/user-profile.png\\\" alt=\\\"sunil\\\"> </div>\\n                <div class=\\\"received_msg\\\">\\n                  <div class=\\\"received_withd_msg\\\">\\n                    <p>Test which is a new approach to have all\\n                      solutions</p>\\n                    <span class=\\\"time_date\\\"> 11:01 AM    |    June 9</span></div>\\n                </div>\\n              </div>\\n              <div class=\\\"outgoing_msg\\\">\\n                <div class=\\\"sent_msg\\\">\\n                  <p>Test which is a new approach to have all\\n                    solutions</p>\\n                  <span class=\\\"time_date\\\"> 11:01 AM    |    June 9</span> </div>\\n              </div>\\n              <div class=\\\"incoming_msg\\\">\\n                <div class=\\\"incoming_msg_img\\\"> <img src=\\\"https://ptetutorials.com/images/user-profile.png\\\" alt=\\\"sunil\\\"> </div>\\n                <div class=\\\"received_msg\\\">\\n                  <div class=\\\"received_withd_msg\\\">\\n                    <p>Test, which is a new approach to have</p>\\n                    <span class=\\\"time_date\\\"> 11:01 AM    |    Yesterday</span></div>\\n                </div>\\n              </div>\\n              <div class=\\\"outgoing_msg\\\">\\n                <div class=\\\"sent_msg\\\">\\n                  <p>Apollo University, Delhi, India Test</p>\\n                  <span class=\\\"time_date\\\"> 11:01 AM    |    Today</span> </div>\\n              </div>\\n              <div class=\\\"incoming_msg\\\">\\n                <div class=\\\"incoming_msg_img\\\"> <img src=\\\"https://ptetutorials.com/images/user-profile.png\\\" alt=\\\"sunil\\\"> </div>\\n                <div class=\\\"received_msg\\\">\\n                  <div class=\\\"received_withd_msg\\\">\\n                    <p>We work directly with our designers and suppliers,\\n                      and sell direct to you, which means quality, exclusive\\n                      products, at a price anyone can afford.</p>\\n                    <span class=\\\"time_date\\\"> 11:01 AM    |    Today</span></div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"type_msg\\\">\\n              <div class=\\\"input_msg_write\\\">\\n                <input type=\\\"text\\\" class=\\\"write_msg\\\" placeholder=\\\"Type a message\\\" />\\n                <button class=\\\"msg_send_btn\\\" type=\\\"button\\\"><i class=\\\"fa fa-paper-plane-o\\\" aria-hidden=\\\"true\\\"></i></button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        \\n        <p class=\\\"text-center top_spac\\\"> Design by <a target=\\\"_blank\\\" href=\\\"#\\\">Sunil Rajput</a></p>\\n        \\n      </div></div> -->\"","import { Component, OnInit } from '@angular/core';\nimport * as io from 'socket.io-client';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  private socket;\n  message: string;\n  messages: string[] = [];\n  constructor() { \n    this.socket=io();\n  }\n  sendMessage() {    \n    this.socket.emit('new-message', this.message); \n    this.message = '';\n  }\n  ngOnInit() {\n    this.socket.on('new-message', (message) => {\n      this.messages.push(message);\n      console.log(message);\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}